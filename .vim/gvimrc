if has("gui_running")
  set shell=/bin/zsh\ -i
else
  set shell=/bin/zsh
endif

set nocompatible

 filetype off
 "-----------------------------Plugins----------------------------------

 set rtp+=~/.vim/bundle/Vundle.vim
 set rtp+=~/eclipse/vim-eclim/eclim/
 call vundle#begin()

 Plugin 'gmarik/Vundle.vim'

 " T-Comment ------------------------------------------------------------
 Plugin 'tomtom/tcomment_vim'
 vmap <c-_> :TComment <CR>
 imap <c-_> <ESC>:TComment <CR>i
 map <c-_> :TComment <CR>

 Plugin 'Raimondi/delimitMate'

 " CtrlP ----------------------------------------------------------
 Plugin 'ctrlpvim/ctrlp.vim'
 let g:ctrlp_custom_ignore = '\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$'
 let g:ctrlp_dotfiles = 0
 set wildignore+=*/tmp/*,*.so,*.swp,*.zip
 let g:ctrlp_map = '<f2>'
 let g:ctrlp_cmd = 'CtrlP .'

 map <Leader>f :CtrlP .<CR>
 map <Leader>b :CtrlPBuffer <CR>

 " Ag search ---------------------------------------------------------------
 Plugin 'rking/ag.vim'
 let g:ag_lhandler="topleft lopen"

 map <Leader>l :Ag <C-r><C-w><CR>
 " nmap <Esc>[1;2R <ESC>:Ag 'def self.<C-r><C-w>' . .gems<CR>
 " imap <Esc>[1;2R <ESC>:Ag 'def self.<C-r><C-w>' . .gems<CR>
 " map  <Esc>[1;2R <ESC>:Ag 'def self.<C-r><C-w>' . .gems<CR>

 nmap <F3> <ESC>:Ag 'def <C-r><C-w>' . .gems<CR>
 imap <F3> <ESC>:Ag 'def <C-r><C-w>' . .gems<CR>
 map  <F3> <ESC>:Ag 'def <C-r><C-w>' . .gems<CR>

 nmap <F4> <ESC>:Ag <C-r><C-w> . <CR>
 imap <F4> <ESC>:Ag <C-r><C-w> . <CR>
 map  <F4> <ESC>:Ag <C-r><C-w> . <CR>

 " NerdTree----------------------------------------------------------------
 Plugin 'scrooloose/nerdtree'

function! ToggleNERDTree()
    let w:jumpbacktohere = 1

    if exists('t:NERDTreeBufName')
        let nerdtree_open = bufwinnr(t:NERDTreeBufName) != -1
    else
        let nerdtree_open = 0
    endif

    if nerdtree_open
        NERDTreeClose
    else
      NERDTreeFind
    endif

endfunction

 map  <Leader>t <ESC>:call ToggleNERDTree()<CR>

 " SnipMate-------------------------------------------------------------------
 Plugin 'MarcWeber/vim-addon-mw-utils'
 Plugin 'tomtom/tlib_vim'
 Plugin 'garbas/vim-snipmate'
let &rtp .= ','.expand('~/.vim/snippets')

 " ZoomWin --------------------------------------------------------------------
 Plugin 'drn/zoomwin-vim'
 map  <Leader>z :ZoomWin<CR>

 " Vim Airline ----------------------------------------------------------------
 Plugin 'bling/vim-airline'
 Plugin 'vim-airline/vim-airline-themes'
 let g:airline_powerline_fonts = 1
 let g:airline_theme = 'badwolf'

 " Vim Tmux Navigator ---------------------------------------------------------
 Plugin 'christoomey/vim-tmux-navigator'

 " Dart Vim -------------------------------------------------------------------
 Plugin 'dart-lang/dart-vim-plugin'

 " Vimux ----------------------------------------------------------------------
 Plugin 'benmills/vimux'

 let g:VimuxHeight = "30"

 map <Leader>v :VimuxCloseRunner<CR>

 call vundle#end()
 "-----------------------------Plugins END----------------------------------

 filetype plugin indent on    " required

set clipboard=unnamed

set timeoutlen=160
set ttyfast

set fdm=manual
set foldcolumn=3
set history=100
set autowrite

set cursorcolumn
set cursorline


set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
set lbr
set tw=500
set ai "tttt indent
set si "Smart indet
set wrap "Wrap lines
set so=1    " Set 7 lines to the curors - when moving vertical..
set hid     "Change buffer - without saving
set nohidden

set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" No sound on errors
set noerrorbells

set splitbelow
set splitright

autocmd BufWritePre * :%s/\s\+$//e

autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

autocmd BufRead,BufNewFile *_spec.rb setlocal filetype=rspec
autocmd BufRead,BufNewFile *_spec.rb set syntax=ruby

autocmd BufRead,BufNewFile *.coffee setlocal filetype=coffee

set backspace=eol,start,indent
set completeopt=menuone,longest,preview

set nobackup
set noswapfile
set undodir=~/.vim/undodir
set undofile
set undolevels=1000
set undoreload=10000

set cmdheight=1

set number
set relativenumber
set numberwidth=1
set title     " show title in console title bar
set wildmenu

set wildmode=list:longest,full

set nowrap

set incsearch
set hlsearch
set ignorecase
set smartcase


set enc=utf-8
set laststatus=2
set showcmd

noremap <Space> <PageDown>
noremap <BS> <PageUp>

set list
set lcs=tab:│┈,trail:·,eol:¬,nbsp:_

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>


colorscheme jellybeans

if has("gui_running")
  autocmd! GUIEnter * set vb t_vb=
  set visualbell t_vb=
  set guioptions-=T
  set guioptions-=b
  set guioptions-=m
  set gfn=Monaco\ for\ Powerline:h14
  set columns=180
  set lines=50
else
  set t_Co=256
  syntax enable
endif "if has("gui_running)

filetype plugin on    " required

if (exists('+colorcolumn'))
    set colorcolumn=80
    highlight ColorColumn ctermbg=black
endif

command! Vcnf vspl $MYVIMRC
command! Ecnf e $MYVIMRC
command! Scnf spl $MYVIMRC

command! Ecolo vspl ~/.vim/colors/jellybeans.vim
command! ReplaceRockets %s/\([a-z_0-9]*\) *=>/\1: /g
command! ReplaceWord %s/\<<C-r><C-w>\>//
command! FixupCurlyBraces %s/{\s*\(\S*\s*\S*\)\s*}/{ \1 }/g
